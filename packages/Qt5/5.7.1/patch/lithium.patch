--- Qt5/qtwebengine/src/3rdparty/chromium/v8/src/crankshaft/lithium.cc	2017-11-17 15:24:05.001037584 +0100
+++ Qt5/qtwebengine/src/3rdparty/chromium/v8/src/crankshaft/lithium.cc	2017-11-17 15:23:55.987738163 +0100
@@ -123,26 +123,27 @@
   }
 }
 
-
-template<LOperand::Kind kOperandKind, int kNumCachedOperands>
-LSubKindOperand<kOperandKind, kNumCachedOperands>*
-LSubKindOperand<kOperandKind, kNumCachedOperands>::cache = NULL;
-
+/*
+template<>
+LSubKindOperand<kOperandKind, kNumCachedOperands>*& getCache() {
+	static LSubKindOperand<kOperandKind, kNumCachedOperands>::cache = NULL;
+}
+*/
 
 template<LOperand::Kind kOperandKind, int kNumCachedOperands>
 void LSubKindOperand<kOperandKind, kNumCachedOperands>::SetUpCache() {
-  if (cache) return;
-  cache = new LSubKindOperand[kNumCachedOperands];
+  if (getCache() != NULL) return;
+  getCache() = new LSubKindOperand[kNumCachedOperands];
   for (int i = 0; i < kNumCachedOperands; i++) {
-    cache[i].ConvertTo(kOperandKind, i);
+    getCache()[i].ConvertTo(kOperandKind, i);
   }
 }
 
 
 template<LOperand::Kind kOperandKind, int kNumCachedOperands>
 void LSubKindOperand<kOperandKind, kNumCachedOperands>::TearDownCache() {
-  delete[] cache;
-  cache = NULL;
+  delete[] getCache();
+  getCache() = NULL;
 }
 
 
--- Qt5/qtwebengine/src/3rdparty/chromium/v8/src/crankshaft/lithium.h	2017-11-17 15:24:14.917666917 +0100
+++ Qt5/qtwebengine/src/3rdparty/chromium/v8/src/crankshaft/lithium.h	2017-11-17 15:23:45.397777984 +0100
@@ -315,10 +315,15 @@
 
 template <LOperand::Kind kOperandKind, int kNumCachedOperands>
 class LSubKindOperand final : public LOperand {
+ private:
+  static LSubKindOperand*& getCache() {
+    static LSubKindOperand* tmp = NULL;
+    return tmp;
+  }
  public:
   static LSubKindOperand* Create(int index, Zone* zone) {
     DCHECK(index >= 0);
-    if (index < kNumCachedOperands) return &cache[index];
+    if (index < kNumCachedOperands) return &getCache()[index];
     return new(zone) LSubKindOperand(index);
   }
 
@@ -331,7 +336,6 @@
   static void TearDownCache();
 
  private:
-  static LSubKindOperand* cache;
 
   LSubKindOperand() : LOperand() { }
   explicit LSubKindOperand(int index) : LOperand(kOperandKind, index) { }
